/*-------------------------------------
├   布局                              ┆
└------------------------------------*/
$onepx: calc((1 * 2 / 750) * 100vw);

@function px($n) {
	@return ($n / 2);
}

@mixin size($w, $h: 0px) {
	width: $w;
	// height: if(($w == $h), $w, $h);
	@if $h == 0px {
		height: $w;
	} @else {
		height: $h;
	}
}

@mixin height($h) {
	height: $h;
	line-height: $h;
	vertical-align: middle;
}

@mixin radius($px) {
	border-radius: $px / 2;
	overflow: hidden;
}

// 固定定位, 兼容IE6
@mixin fixed() {
	position: fixed;
	_position: absolute;
	*zoom: 1;
}

@mixin radius($px) {
	border-radius: $px / 2;
	overflow: hidden;
}

// 统一盒模型
@mixin border-box() {
	&,
	*,
	*:after,
	*:before {
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;
	}
}

// 文字图片居中
@mixin center-text-x() {
	/** inline -x center*/
	text-align: center;
}

@mixin center-text-y() {
	/** inline -y center*/
	display: table-cell;
	vertical-align: middle;
}

// 文字图片居中
@mixin center-text-xy() {
	/** inline -y center*/
	@include center-text-x();
	@include center-text-y();
}

// 块级元素水平居中
@mixin center-auto-x() {
	/** block x center */
	display: block;
	margin-left: auto;
	margin-right: auto;
}

@mixin center-position-x() {
	position: absolute;
	left: 50%;
	transform: translateX(-50%);
}

@mixin center-position-y() {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
}

@mixin center-position-xy() {
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
}

// 遮罩层, 全屏遮罩、区域遮罩
@mixin over-screen() {
	@include fixed();
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}

@mixin flex1() {
	display: flex;
	align-items: center;
}

@mixin flex-column() {
	display: flex;
	flex-direction: column;
}

@mixin flex-center-xy() {
	display: flex;
	justify-content: center;
	align-items: center;
}

@mixin flex-center-xy-row() {
	display: flex;
	align-items: center;
	justify-content: center;
}

@mixin flex-center-xy-column() {
	@include flex-column();
	align-items: center;
	justify-content: center;
}

@mixin grid($n) {
	display: grid;
	grid-template-columns: repeat($n, 1fr);
}

@mixin padding($v) {
	padding: $v;
	@include border-box();
}

@mixin loop-margin-top($list) {
	@each $size in $list {
		.margin-top-#{$size} {
			margin-top: ($size * 1px);
		}
	}
}

@mixin loop-margin-top-375($list) {
	@each $size in $list {
		.margin-top-#{$size} {
			margin-top: ($size * 1px) / 2;
		}
	}
}
